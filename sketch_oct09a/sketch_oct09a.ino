#include <M5Stack.h>

#define KEYBOARD_I2C_ADDR     0X08
#define KEYBOARD_INT          5

uint8_t key_val;

int MAX = 60 * 40;
int remain = MAX;
int beforeMinutes = -1;
int beforeSeconds = -1;
int battery = -1;
int count = 0;
bool isRunning = false;
bool isCharging = false;
bool isWaitInput = false;
unsigned long int beforeTime = 0;

int MODE_TIMER = 1;
int MODE_CALC = 2;
int appMode = MODE_TIMER;

int INPUT_LENGTH = 4;
int inputData[4] = { -1, -1, -1, -1 };
String stringInputData = "";
String beforeStringInputData = "";
int inputRatio = -1;
int beforeInputRatio = 1;

int myLifePoint = 8000;
int beforeMyLifePoint = 0;
int opponentLifePoint = 8000;
int beforeOpponentLifePoint = 0;

int SIDE_ME = 1;
int SIDE_OPPONENT = 2;
int focusSide = SIDE_ME;
int beforeFocusSide = -1;

// 'timer', 16x16px
const uint16_t bitmap_timer [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xc618, 0x7bcf, 0x5acb, 0x5acb, 0x7bcf, 0xc618, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xc638, 0x2965, 0x0000, 0x18c3, 0x39e7, 0x39e7, 0x18c3, 0x0000, 0x2965, 0xc638, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xa514, 0x0020, 0x2124, 0xbdf7, 0xffff, 0xffff, 0xffff, 0xffff, 0xbdf7, 0x2124, 0x0020, 0xa514, 0xffff, 0xffff,
  0xffff, 0xc638, 0x0020, 0x5acb, 0xf7be, 0xffff, 0xffff, 0x8410, 0x8410, 0xffff, 0xffff, 0xf7be, 0x5acb, 0x0020, 0xc638, 0xffff,
  0xffff, 0x2965, 0x2124, 0xf7be, 0xffff, 0xffff, 0xffff, 0x4a69, 0x4a69, 0xffff, 0xffff, 0xffff, 0xf7be, 0x2124, 0x2965, 0xffff,
  0xc618, 0x0000, 0xbdf7, 0xffff, 0xffff, 0xffff, 0xffff, 0x4a69, 0x4a69, 0xffff, 0xffff, 0xffff, 0xffff, 0xbdf7, 0x0000, 0xc618,
  0x7bcf, 0x18c3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x4a69, 0x4a69, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x18c3, 0x7bcf,
  0x5acb, 0x39e7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x4a69, 0x3186, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0x39e7, 0x5acb,
  0x5acb, 0x39e7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xad55, 0x0861, 0x0861, 0x73ae, 0xf79e, 0xffff, 0xffff, 0x39e7, 0x5acb,
  0x7bcf, 0x18c3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x73ae, 0x0861, 0x9cf3, 0xffff, 0xffff, 0x18c3, 0x7bcf,
  0xc618, 0x0000, 0xbdf7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xffff, 0xffff, 0xbdf7, 0x0000, 0xc618,
  0xffff, 0x2965, 0x2124, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0x2124, 0x2965, 0xffff,
  0xffff, 0xc638, 0x0020, 0x5acb, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0x5acb, 0x0020, 0xc638, 0xffff,
  0xffff, 0xffff, 0xa514, 0x0020, 0x2124, 0xbdf7, 0xffff, 0xffff, 0xffff, 0xffff, 0xbdf7, 0x2104, 0x0020, 0xa514, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xc638, 0x2965, 0x0000, 0x18c3, 0x39e7, 0x39e7, 0x18c3, 0x0000, 0x2965, 0xc638, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xc618, 0x7bcf, 0x5acb, 0x5acb, 0x7bcf, 0xc618, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};

// '0', 12x16px
const uint16_t bitmap_number0 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cd3, 0x528a, 0x630c, 0xa514,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x630c, 0x0020, 0x52aa, 0x5acb, 0x0861, 0x6b4d, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xce59, 0x0000, 0x9492, 0xffff, 0xffff, 0xad75, 0x0000, 0xbdd7, 0xffff, 0xffff, 0xffff, 0xffff, 0x73ae, 0x0841,
  0xf7be, 0xffff, 0xffff, 0xffff, 0x1082, 0x632c, 0xffff, 0xffff, 0xffff, 0xffff, 0x4208, 0x31a6, 0xffff, 0xffff, 0xffff, 0xffff,
  0x39e7, 0x4208, 0xffff, 0xffff, 0xffff, 0xffff, 0x2965, 0x4a49, 0xffff, 0xffff, 0xffff, 0xffff, 0x528a, 0x2965, 0xffff, 0xffff,
  0xffff, 0xffff, 0x2965, 0x528a, 0xffff, 0xffff, 0xffff, 0xffff, 0x4a69, 0x3186, 0xffff, 0xffff, 0xffff, 0xffff, 0x4228, 0x39e7,
  0xffff, 0xffff, 0xffff, 0xffff, 0x39c7, 0x4228, 0xffff, 0xffff, 0xffff, 0xffff, 0x6b6d, 0x1082, 0xffff, 0xffff, 0xffff, 0xffdf,
  0x1082, 0x7bef, 0xffff, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x9492, 0xffff, 0xffff, 0x9cd3, 0x0000, 0xce79, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0x738e, 0x0020, 0x4a69, 0x52aa, 0x0000, 0x6b4d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xa514, 0x5aeb, 0x528a, 0x9cf3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// '1', 12x16px
const uint16_t bitmap_number1 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x6b6d, 0xf7be,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8410, 0x0000, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffdf, 0x7bcf, 0x4228, 0x0000, 0x0000, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0x5acb,
  0x5acb, 0x3186, 0x0000, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9492, 0x0000, 0xef7d,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9492, 0x0000, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9492, 0x0000, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0x9492, 0x0000, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9492, 0x0000, 0xef7d,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9492, 0x0000, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9492, 0x0000, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xc618, 0x6b6d, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// '2', 12x16px
const uint16_t bitmap_number2 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xbdf7, 0x8430, 0x738e, 0x9cd3,
  0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x7bcf, 0x0000, 0x2965, 0x4208, 0x0841, 0x2124, 0xef5d, 0xffff, 0xffff,
  0xffff, 0xffff, 0xc618, 0x0000, 0x8c71, 0xffff, 0xffff, 0xd69a, 0x0841, 0x6b4d, 0xffff, 0xffff, 0xffff, 0xffff, 0x8410, 0x0020,
  0xf7be, 0xffff, 0xffff, 0xffff, 0x4208, 0x3186, 0xffff, 0xffff, 0xffff, 0xffff, 0xc638, 0xa534, 0xffff, 0xffff, 0xffff, 0xffff,
  0x2124, 0x4228, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0x632c, 0x0000, 0xb5b6, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xbdd7, 0x2945, 0x0861, 0xa514, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e,
  0x5acb, 0x0000, 0x5aeb, 0xe73c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0x31a6, 0x18e3, 0xc618, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xa514, 0x0841, 0xdefb, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0x632c, 0x1082, 0x4a49, 0x4a49, 0x4a49, 0x4a49, 0x4a49, 0x6b4d, 0xffff, 0xffff, 0xffff, 0xffff, 0x8410, 0x630c,
  0x630c, 0x630c, 0x630c, 0x630c, 0x630c, 0x8410, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// '3', 12x16px
const uint16_t bitmap_number3 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0x8c51, 0x52aa, 0x528a, 0x8410,
  0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0x39c7, 0x1082, 0x5aeb, 0x528a, 0x0841, 0x2124, 0xf79e, 0xffff, 0xffff,
  0xffff, 0xffff, 0x9cf3, 0x0000, 0xd69a, 0xffff, 0xffff, 0xc638, 0x0000, 0xa534, 0xffff, 0xffff, 0xffff, 0xffff, 0x73ae, 0x3186,
  0xffff, 0xffff, 0xffff, 0xf79e, 0x0000, 0x9492, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0x73ae,
  0x0020, 0xdedb, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x3186, 0x0000, 0x0000, 0x9cd3, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xc618, 0xa534, 0x4a69, 0x0020, 0xa514, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0x3186, 0x2965, 0xffff, 0xffff, 0xffff, 0xffff, 0x2965, 0x5aeb, 0xffff, 0xffff, 0xffff, 0xffff,
  0x52aa, 0x2945, 0xffff, 0xffff, 0xffff, 0xffff, 0x630c, 0x10a2, 0xef5d, 0xffff, 0xffff, 0xe73c, 0x10a2, 0x630c, 0xffff, 0xffff,
  0xffff, 0xffff, 0xdefb, 0x1082, 0x18e3, 0x632c, 0x630c, 0x1082, 0x18c3, 0xe73c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe73c,
  0x73ae, 0x4a69, 0x52aa, 0x8430, 0xf79e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// '4', 12x16px
const uint16_t bitmap_number4 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0x632c,
  0xce79, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x5acb, 0x0000, 0xad55, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cf3, 0x1082, 0x0000, 0xad55, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xdedb, 0x0861, 0xa534, 0x0000, 0xad55, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0x31a6, 0x73ae, 0xe73c, 0x0000,
  0xad55, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x73ae, 0x3186, 0xffdf, 0xe73c, 0x0000, 0xad55, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xbdd7, 0x0841, 0xd6ba, 0xffff, 0xe73c, 0x0000, 0xad55, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x18c3, 0x4a49,
  0xa534, 0xa534, 0x94b2, 0x0000, 0x6b6d, 0xa534, 0xffff, 0xffff, 0xffff, 0xffff, 0x2124, 0x18e3, 0x18e3, 0x18e3, 0x18e3, 0x0000,
  0x10a2, 0x2124, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0xad55, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0xad55, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xf7be, 0x630c, 0xce79, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// '5', 12x16px
const uint16_t bitmap_number5 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x94b2, 0x5acb, 0x5acb, 0x5acb, 0x5acb,
  0x5acb, 0xdefb, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x39e7, 0x2945, 0x4228, 0x4228, 0x4228, 0x4228, 0xd6ba, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0x18c3, 0xad55, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0x0000,
  0xce79, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd69a, 0x0000, 0x7bef, 0x39e7, 0x3186, 0x632c,
  0xe71c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xad75, 0x0000, 0x2965, 0x8430, 0x8410, 0x18c3, 0x1082, 0xe71c, 0xffff, 0xffff,
  0xffff, 0xffff, 0xd6ba, 0x94b2, 0xf7be, 0xffff, 0xffff, 0xe71c, 0x0861, 0x630c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0x4228, 0x3186, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cf3, 0xad55, 0xffff, 0xffff, 0xffff, 0xffff,
  0x39c7, 0x4a49, 0xffff, 0xffff, 0xffff, 0xffff, 0x632c, 0x1082, 0xe71c, 0xffff, 0xffff, 0xbdd7, 0x0000, 0x9cd3, 0xffff, 0xffff,
  0xffff, 0xffff, 0xe73c, 0x18e3, 0x1082, 0x528a, 0x4a49, 0x0020, 0x528a, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be,
  0x94b2, 0x632c, 0x7bcf, 0xb596, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// '6', 12x16px
const uint16_t bitmap_number6 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xb596, 0x5acb, 0x4a49, 0x738e,
  0xe71c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c51, 0x0000, 0x528a, 0x73ae, 0x2104, 0x10a2, 0xef5d, 0xffff, 0xffff,
  0xffff, 0xffff, 0xe73c, 0x0020, 0x7bef, 0xffff, 0xffff, 0xe73c, 0x0020, 0x8c51, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c71, 0x0841,
  0xf79e, 0xffff, 0xffff, 0xffff, 0xd69a, 0xe71c, 0xffff, 0xffff, 0xffff, 0xffff, 0x52aa, 0x39c7, 0xdedb, 0x7bcf, 0x5acb, 0x8c51,
  0xf79e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x39c7, 0x2945, 0x10a2, 0x4a69, 0x52aa, 0x1082, 0x18e3, 0xef5d, 0xffff, 0xffff,
  0xffff, 0xffff, 0x2965, 0x0000, 0xb5b6, 0xffff, 0xffff, 0xdedb, 0x0020, 0x6b6d, 0xffff, 0xffff, 0xffff, 0xffff, 0x4228, 0x18e3,
  0xffff, 0xffff, 0xffff, 0xffff, 0x4228, 0x39c7, 0xffff, 0xffff, 0xffff, 0xffff, 0x632c, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff,
  0x4228, 0x4228, 0xffff, 0xffff, 0xffff, 0xffff, 0xbdd7, 0x0000, 0xbdd7, 0xffff, 0xffff, 0xe71c, 0x0841, 0x8c51, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0x5acb, 0x0841, 0x630c, 0x738e, 0x18c3, 0x3186, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0x9cf3, 0x52aa, 0x528a, 0x8c51, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// '7', 12x16px
const uint16_t bitmap_number7 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c71, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef,
  0x7bef, 0x8c71, 0xffff, 0xffff, 0xffff, 0xffff, 0x2965, 0x10a2, 0x10a2, 0x10a2, 0x10a2, 0x10a2, 0x0020, 0x2124, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce79, 0x0861, 0xc618, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xf7be, 0x2104, 0x7bef, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x738e, 0x18e3,
  0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xdedb, 0x0000, 0xa534, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x632c, 0x2965, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xe73c, 0x0020, 0x9492, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8410, 0x0020, 0xef7d, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x39e7, 0x4a49, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xf79e, 0x0020, 0x8430, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71c,
  0x7bef, 0xd6ba, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// '8', 12x16px
const uint16_t bitmap_number8 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0x8c51, 0x4a69, 0x4a69, 0x8410,
  0xf79e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0x39c7, 0x1082, 0x6b4d, 0x632c, 0x0861, 0x2965, 0xf7be, 0xffff, 0xffff,
  0xffff, 0xffff, 0xb596, 0x0000, 0xb596, 0xffff, 0xffff, 0xbdf7, 0x0000, 0xad55, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cd3, 0x0000,
  0xef5d, 0xffff, 0xffff, 0xe73c, 0x0000, 0x9cd3, 0xffff, 0xffff, 0xffff, 0xffff, 0xdefb, 0x0841, 0x528a, 0xce59, 0xdefb, 0x528a,
  0x0861, 0xe73c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xb5b6, 0x0000, 0x0000, 0x0000, 0x0000, 0xa534, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xc638, 0x1082, 0x528a, 0xbdf7, 0xbdf7, 0x52aa, 0x0000, 0xbdd7, 0xffff, 0xffff, 0xffff, 0xffff, 0x4a49, 0x2104,
  0xffdf, 0xffff, 0xffff, 0xffff, 0x2124, 0x4228, 0xffff, 0xffff, 0xffff, 0xffff, 0x31a6, 0x4208, 0xffff, 0xffff, 0xffff, 0xffff,
  0x4a49, 0x31a6, 0xffff, 0xffff, 0xffff, 0xffff, 0x632c, 0x0861, 0xe71c, 0xffff, 0xffff, 0xef7d, 0x10a2, 0x6b6d, 0xffff, 0xffff,
  0xffff, 0xffff, 0xe73c, 0x18c3, 0x10a2, 0x632c, 0x6b6d, 0x18c3, 0x18c3, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d,
  0x8410, 0x4a69, 0x4a69, 0x7bef, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// '9', 12x16px
const uint16_t bitmap_number9 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0x8430, 0x528a, 0x528a, 0x94b2,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0x2965, 0x1082, 0x632c, 0x5aeb, 0x0020, 0x52aa, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0x8c71, 0x0020, 0xd6ba, 0xffff, 0xffff, 0xbdd7, 0x0000, 0xbdf7, 0xffff, 0xffff, 0xffff, 0xffff, 0x4a69, 0x39e7,
  0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x738e, 0xffff, 0xffff, 0xffff, 0xffff, 0x4a49, 0x4208, 0xffff, 0xffff, 0xffff, 0xffff,
  0x0861, 0x4a49, 0xffff, 0xffff, 0xffff, 0xffff, 0x8410, 0x0841, 0xe71c, 0xffff, 0xffff, 0xb596, 0x0000, 0x39e7, 0xffff, 0xffff,
  0xffff, 0xffff, 0xf79e, 0x2124, 0x10a2, 0x630c, 0x528a, 0x10a2, 0x2124, 0x4a69, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be,
  0x8c71, 0x5aeb, 0x7bcf, 0xd6ba, 0x2124, 0x6b4d, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 0xce59, 0xffff, 0xffff, 0xffff, 0xef5d,
  0x0000, 0xad55, 0xffff, 0xffff, 0xffff, 0xffff, 0x7bef, 0x0861, 0xf79e, 0xffff, 0xffff, 0x738e, 0x10a2, 0xf79e, 0xffff, 0xffff,
  0xffff, 0xffff, 0xe71c, 0x0861, 0x3186, 0x8430, 0x52aa, 0x0000, 0xad55, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71c,
  0x6b6d, 0x4a49, 0x5aeb, 0xc618, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};

const uint16_t* bitmap_numbers[10] = {
  bitmap_number0,
  bitmap_number1,
  bitmap_number2,
  bitmap_number3,
  bitmap_number4,
  bitmap_number5,
  bitmap_number6,
  bitmap_number7,
  bitmap_number8,
  bitmap_number9
};

const uint16_t bitmap_colon [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe73c, 0xe73c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x2965, 0x2965, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0x8430, 0x8430, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8430, 0x8430, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x2965, 0x2965, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe73c, 0xe73c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};

// 'battery', 16x9px
const uint16_t bitmap_battery [] PROGMEM = {
  0xb596, 0x0841, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x3186, 0xf79e, 0xffff, 0xffff,
  0x3186, 0x528a, 0xd6ba, 0xd6ba, 0xd6ba, 0xd6ba, 0xd6ba, 0xd6ba, 0xd6ba, 0xd6ba, 0xd6ba, 0xc638, 0x0841, 0x9cd3, 0xffff, 0xffff,
  0x2104, 0x8c51, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x2104, 0x8c51, 0xffff, 0xffff,
  0x2104, 0x8c51, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x2104, 0x8c51, 0xdedb, 0x4a69,
  0x2104, 0x8c51, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x2104, 0x8c51, 0xb596, 0x0000,
  0x2104, 0x8c51, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x2104, 0x8c51, 0xdedb, 0x4a69,
  0x2104, 0x8c51, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x2104, 0x8c51, 0xffff, 0xffff,
  0x3186, 0x528a, 0xd6ba, 0xd6ba, 0xd6ba, 0xd6ba, 0xd6ba, 0xd6ba, 0xd6ba, 0xd6ba, 0xd6ba, 0xc638, 0x0841, 0x9cd3, 0xffff, 0xffff,
  0xb596, 0x0841, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x3186, 0xf79e, 0xffff, 0xffff
};

// '10px_0', 10x14px
const uint16_t bitmap_10px_numbers10px_0 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0x630c, 0x0841, 0x18c3, 0x632c, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff,
  0x6b4d, 0x18e3, 0xc638, 0xce59, 0x2965, 0x630c, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0xad55, 0xffff, 0xffff, 0xbdd7, 0x0020,
  0xef7d, 0xffff, 0xffff, 0xdedb, 0x0000, 0xef5d, 0xffff, 0xffff, 0xf79e, 0x0000, 0xbdf7, 0xffff, 0xffff, 0xb5b6, 0x0000, 0xffff,
  0xffff, 0xffff, 0xffff, 0x0020, 0xa534, 0xffff, 0xffff, 0xad55, 0x0020, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0xad75, 0xffff,
  0xffff, 0xc618, 0x0000, 0xef7d, 0xffff, 0xffff, 0xef7d, 0x0000, 0xc638, 0xffff, 0xffff, 0xf79e, 0x0841, 0xad75, 0xffff, 0xffff,
  0xad75, 0x0861, 0xffdf, 0xffff, 0xffff, 0xffff, 0x6b4d, 0x2104, 0xbdf7, 0xc618, 0x2104, 0x8410, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffdf, 0x6b4d, 0x10a2, 0x18e3, 0x73ae, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// '10px_1', 10x14px
const uint16_t bitmap_10px_numbers10px_1 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xbdd7, 0x4a49, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xf79e, 0xc618, 0x2945, 0x3186, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x39e7, 0x0861, 0x0020, 0x3186, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x7bef, 0x3186, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0x7bef, 0x3186, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x7bef, 0x3186, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x7bef, 0x3186, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x7bef,
  0x3186, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x7bef, 0x3186, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0x8c71, 0x4a49, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// '10px_2', 10x14px
const uint16_t bitmap_10px_numbers10px_2 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8410, 0x39c7, 0x2124, 0x52aa, 0xdefb, 0xffff, 0xffff, 0xffff, 0xffff,
  0x6b6d, 0x18c3, 0xa514, 0xbdd7, 0x4208, 0x2104, 0xf7be, 0xffff, 0xffff, 0xffff, 0x18c3, 0xad55, 0xffff, 0xffff, 0xe73c, 0x0000,
  0xb5b6, 0xffff, 0xffff, 0xf7be, 0x632c, 0xe73c, 0xffff, 0xffff, 0xef5d, 0x0000, 0xb5b6, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xf7be, 0x4a69, 0x2104, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xad55, 0x18e3, 0x31a6, 0xdedb, 0xffff, 0xffff,
  0xffff, 0xffff, 0xf79e, 0x528a, 0x10a2, 0x9cd3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x528a, 0x39e7, 0xef5d, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0x0000, 0xa514, 0xbdf7, 0xbdf7, 0xbdf7, 0xbdf7, 0xef5d, 0xffff, 0xffff, 0xbdf7,
  0x10a2, 0x10a2, 0x10a2, 0x10a2, 0x10a2, 0x10a2, 0xb596, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// '10px_3', 10x14px
const uint16_t bitmap_10px_numbers10px_3 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x4a69, 0x0861, 0x0841, 0x4228, 0xdedb, 0xffff, 0xffff, 0xffff, 0xffff,
  0x4208, 0x4228, 0xce79, 0xc618, 0x39e7, 0x31a6, 0xffff, 0xffff, 0xffff, 0xf7be, 0x0020, 0xce79, 0xffff, 0xffff, 0xb5b6, 0x0000,
  0xffff, 0xffff, 0xffff, 0xffdf, 0xce79, 0xffff, 0xffff, 0xffff, 0x6b6d, 0x2965, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0x630c, 0x1082, 0x0841, 0xd69a, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd69a, 0xad75, 0x4228, 0x18e3, 0xf79e, 0xffff,
  0xffff, 0xe73c, 0xce59, 0xffff, 0xffff, 0xffff, 0xf7be, 0x0020, 0xb596, 0xffff, 0xffff, 0xb596, 0x0020, 0xf7be, 0xffff, 0xffff,
  0xf7be, 0x0020, 0xb596, 0xffff, 0xffff, 0xf79e, 0x10a2, 0x5aeb, 0xd6ba, 0xd69a, 0x52aa, 0x18e3, 0xf79e, 0xffff, 0xffff, 0xffff,
  0xce79, 0x39c7, 0x0841, 0x0861, 0x4a49, 0xd6ba, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// '10px_4', 10x14px
const uint16_t bitmap_10px_numbers10px_4 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xb5b6, 0x10a2, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xe73c, 0x10a2, 0x0000, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x4228, 0x5acb, 0x0000, 0xf7be,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c51, 0x4228, 0xce59, 0x0000, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xce79, 0x18c3,
  0xe73c, 0xce59, 0x0000, 0xf7be, 0xffff, 0xffff, 0xffff, 0xf7be, 0x2124, 0xad75, 0xffff, 0xce59, 0x0000, 0xf7be, 0xffff, 0xffff,
  0xffff, 0x8c71, 0x10a2, 0x738e, 0x738e, 0x5acb, 0x0000, 0x6b6d, 0xbdd7, 0xffff, 0xffff, 0xc618, 0x7bcf, 0x7bcf, 0x7bcf, 0x632c,
  0x0000, 0x73ae, 0xc618, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xd69a, 0x10a2, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// '10px_5', 10x14px
const uint16_t bitmap_10px_numbers10px_5 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xad75, 0x1082, 0x1082, 0x1082, 0x1082, 0x39e7, 0xffff, 0xffff, 0xffff, 0xffff,
  0x8430, 0x4a69, 0xbdf7, 0xbdf7, 0xbdf7, 0xce59, 0xffff, 0xffff, 0xffff, 0xffff, 0x630c, 0x8c51, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0x39e7, 0x7bef, 0x7bcf, 0x6b6d, 0xad75, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x18c3, 0x18c3,
  0x6b6d, 0x6b4d, 0x0841, 0x632c, 0xffff, 0xffff, 0xffff, 0xffff, 0xa514, 0xe71c, 0xffff, 0xffff, 0xbdd7, 0x0000, 0xd69a, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0xad75, 0xffff, 0xffff, 0xce59, 0x31a6, 0xf79e, 0xffff, 0xffff,
  0xd6ba, 0x0000, 0xd69a, 0xffff, 0xffff, 0xf79e, 0x18e3, 0x528a, 0xc638, 0xbdf7, 0x3186, 0x4a49, 0xffff, 0xffff, 0xffff, 0xffff,
  0xdedb, 0x52aa, 0x18e3, 0x2965, 0x738e, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// '10px_6', 10x14px
const uint16_t bitmap_10px_numbers10px_6 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x7bef, 0x1082, 0x0020, 0x3186, 0xce79, 0xffff, 0xffff, 0xffff, 0xffff,
  0x8c51, 0x10a2, 0xbdf7, 0xe73c, 0x5aeb, 0x2104, 0xffff, 0xffff, 0xffff, 0xffff, 0x10a2, 0x9cf3, 0xffff, 0xffff, 0xe73c, 0x6b6d,
  0xf79e, 0xffff, 0xffff, 0xd6ba, 0x0000, 0xe73c, 0xad75, 0x9492, 0xce59, 0xffff, 0xffff, 0xffff, 0xffff, 0xb5b6, 0x0020, 0x39e7,
  0x39e7, 0x4228, 0x0020, 0x73ae, 0xffff, 0xffff, 0xffff, 0xad55, 0x0000, 0x8c51, 0xffff, 0xffff, 0xa514, 0x0000, 0xdedb, 0xffff,
  0xffff, 0xc618, 0x0000, 0xe71c, 0xffff, 0xffff, 0xf79e, 0x0000, 0xb596, 0xffff, 0xffff, 0xe73c, 0x0000, 0xc638, 0xffff, 0xffff,
  0xef5d, 0x0000, 0xce59, 0xffff, 0xffff, 0xffff, 0x5aeb, 0x31a6, 0xd69a, 0xdefb, 0x528a, 0x31a6, 0xffff, 0xffff, 0xffff, 0xffff,
  0xf7be, 0x632c, 0x1082, 0x0861, 0x528a, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// '10px_7', 10x14px
const uint16_t bitmap_10px_numbers10px_7 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xad55, 0x2965, 0x2965, 0x2965, 0x2965, 0x2965, 0x2965, 0xad55, 0xffff, 0xffff, 0xd69a,
  0x9492, 0x9492, 0x9492, 0x9492, 0x73ae, 0x0841, 0xce79, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x4208, 0x94b2,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c71, 0x39c7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xe73c, 0x0841, 0xc638, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x738e, 0x4a69, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xef7d, 0x0861, 0xb596, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cd3, 0x10a2, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x52aa, 0x5acb, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0x4228, 0xa534, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// '10px_8', 10x14px
const uint16_t bitmap_10px_numbers10px_8 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe73c, 0x4a69, 0x0841, 0x0841, 0x4a49, 0xe71c, 0xffff, 0xffff, 0xffff, 0xffff,
  0x4a49, 0x39c7, 0xd6ba, 0xbdd7, 0x3186, 0x39e7, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0xa534, 0xffff, 0xffff, 0x9cf3, 0x0841,
  0xffff, 0xffff, 0xffff, 0xffff, 0x31a6, 0x52aa, 0xef5d, 0xe73c, 0x4208, 0x4a69, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71c, 0x1082,
  0x0000, 0x0000, 0x0841, 0xdedb, 0xffff, 0xffff, 0xffff, 0xffff, 0x31a6, 0x4208, 0xc618, 0xc618, 0x4228, 0x2124, 0xf7be, 0xffff,
  0xffff, 0xce59, 0x0000, 0xe73c, 0xffff, 0xffff, 0xef7d, 0x0000, 0xb5b6, 0xffff, 0xffff, 0xbdd7, 0x0000, 0xef5d, 0xffff, 0xffff,
  0xf7be, 0x0000, 0xbdf7, 0xffff, 0xffff, 0xf79e, 0x18c3, 0x528a, 0xd6ba, 0xce59, 0x5acb, 0x2104, 0xf7be, 0xffff, 0xffff, 0xffff,
  0xd6ba, 0x4228, 0x0841, 0x0841, 0x4208, 0xd6ba, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// '10px_9', 10x14px
const uint16_t bitmap_10px_numbers10px_9 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe73c, 0x4a49, 0x0841, 0x0841, 0x5aeb, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff,
  0x31a6, 0x4228, 0xd6ba, 0xce79, 0x3186, 0x5aeb, 0xffff, 0xffff, 0xffff, 0xd69a, 0x0000, 0xe71c, 0xffff, 0xffff, 0xbdf7, 0x0020,
  0xf79e, 0xffff, 0xffff, 0xbdf7, 0x0000, 0xf79e, 0xffff, 0xffff, 0xce79, 0x0000, 0xc638, 0xffff, 0xffff, 0xe73c, 0x0020, 0xa534,
  0xffff, 0xffff, 0x8410, 0x0000, 0xb5b6, 0xffff, 0xffff, 0xffff, 0x8430, 0x0841, 0x528a, 0x4208, 0x39c7, 0x0000, 0xc638, 0xffff,
  0xffff, 0xffff, 0xffff, 0xce79, 0x94b2, 0xad75, 0xce79, 0x0000, 0xe73c, 0xffff, 0xffff, 0xef5d, 0x632c, 0xef7d, 0xffff, 0xffff,
  0x8c71, 0x2965, 0xffff, 0xffff, 0xffff, 0xffdf, 0x18c3, 0x738e, 0xf79e, 0xc618, 0x10a2, 0xa534, 0xffff, 0xffff, 0xffff, 0xffff,
  0xce59, 0x3186, 0x0020, 0x10a2, 0x8c71, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};

// Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 1600)
const int bitmap_10px_numbersallArray_LEN = 10;
const uint16_t* bitmap_10px_numbers[10] = {
  bitmap_10px_numbers10px_0,
  bitmap_10px_numbers10px_1,
  bitmap_10px_numbers10px_2,
  bitmap_10px_numbers10px_3,
  bitmap_10px_numbers10px_4,
  bitmap_10px_numbers10px_5,
  bitmap_10px_numbers10px_6,
  bitmap_10px_numbers10px_7,
  bitmap_10px_numbers10px_8,
  bitmap_10px_numbers10px_9
};

// '10px_percent', 10x14px
const uint16_t bitmap_10px_percent [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffdf, 0xd69a, 0xffff, 0xffff, 0xbdf7, 0x18e3,
  0x18e3, 0x8c51, 0xffff, 0xffff, 0x9cd3, 0xc618, 0xffff, 0xffff, 0x3186, 0xdefb, 0xffdf, 0x2124, 0xef7d, 0xf7be, 0x632c, 0xffff,
  0xffff, 0xffff, 0x31a6, 0xd69a, 0xf7be, 0x2124, 0xef7d, 0x8410, 0xd6ba, 0xffff, 0xffff, 0xffff, 0xc638, 0x2124, 0x18e3, 0x9cd3,
  0xef5d, 0x738e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x738e, 0xe73c, 0x9cd3, 0x18e3, 0x2124, 0xc638,
  0xffff, 0xffff, 0xffff, 0xd6ba, 0x8410, 0xef7d, 0x2124, 0xf7be, 0xd69a, 0x31a6, 0xffff, 0xffff, 0xffff, 0x632c, 0xf79e, 0xef5d,
  0x2124, 0xffdf, 0xdefb, 0x3186, 0xffff, 0xffff, 0xc618, 0x94b2, 0xffff, 0xffff, 0x8c71, 0x18e3, 0x2104, 0xbdf7, 0xffff, 0xffff,
  0xd6ba, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// '20px_0', 20x25px
const uint16_t bitmap_20px_numbers_20px_0 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xd69a, 0x6b4d, 0x31a6, 0x31a6, 0x6b4d, 0xd69a, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x94b2, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x94b2, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xa534, 0x0000, 0x0000, 0x0000, 0x4a49, 0x4a49, 0x0020,
  0x0000, 0x0000, 0xa534, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x1082, 0x0000, 0x0861,
  0xce59, 0xffff, 0xffff, 0xce59, 0x0861, 0x0000, 0x1082, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0x8410, 0x0000, 0x0000, 0x9492, 0xffff, 0xffff, 0xffff, 0xffff, 0x94b2, 0x0000, 0x0000, 0x8410, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0x2104, 0x0000, 0x0841, 0xf79e, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0x0841, 0x0000, 0x2124,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x0000, 0x0000, 0x52aa, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0x5acb, 0x0000, 0x0000, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xbdf7, 0x0000, 0x0000, 0x8410, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8430, 0x0000, 0x0000, 0xbdf7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xad55,
  0x0000, 0x0000, 0x9cf3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cf3, 0x0000, 0x0000, 0xad75, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xa514, 0x0000, 0x0000, 0xad75, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xb596, 0x0000, 0x0000,
  0xa514, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xad75, 0x0000, 0x0000, 0x9cd3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0x9cf3, 0x0000, 0x0000, 0xad75, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xc618, 0x0000, 0x0000, 0x8410, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8430, 0x0000, 0x0000, 0xbdf7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d,
  0x0000, 0x0000, 0x528a, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x52aa, 0x0000, 0x0000, 0xef5d, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0x2124, 0x0000, 0x0841, 0xf79e, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0x0841, 0x0000, 0x2124,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8430, 0x0000, 0x0000, 0x9492, 0xffff, 0xffff, 0xffff, 0xffff,
  0x9492, 0x0000, 0x0000, 0x8410, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x1082, 0x0000, 0x0861,
  0xce59, 0xffff, 0xffff, 0xc638, 0x0861, 0x0000, 0x1082, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xa534, 0x0000, 0x0000, 0x0000, 0x4228, 0x4228, 0x0000, 0x0000, 0x0000, 0xa534, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x94b2, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x94b2, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 0x6b4d, 0x31a6, 0x31a6, 0x6b4d,
  0xd69a, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff
};
// '20px_1', 20x25px
const uint16_t bitmap_20px_numbers_20px_1 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xad75, 0x738e, 0x738e, 0x738e, 0x7bef, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe73c, 0x0861, 0x0000, 0x0000, 0x0000, 0x1082, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x5aeb, 0x0000, 0x0000, 0x0000, 0x0000,
  0x1082, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0x3186, 0x0000, 0x1082, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x3186, 0x0000, 0x1082, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x3186, 0x0000, 0x1082, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x3186, 0x0000,
  0x1082, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0x3186, 0x0000, 0x1082, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x3186, 0x0000, 0x1082, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x3186, 0x0000, 0x1082, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x3186, 0x0000,
  0x1082, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0x3186, 0x0000, 0x1082, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x3186, 0x0000, 0x1082, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x3186, 0x0000, 0x1082, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x3186, 0x0000,
  0x1082, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0x3186, 0x0000, 0x1082, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x3186, 0x0000, 0x1082, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x3186, 0x0000, 0x1082, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c71, 0x738e,
  0x7bef, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff
};
// '20px_2', 20x25px
const uint16_t bitmap_20px_numbers_20px_2 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xe73c, 0xbdf7, 0xa534, 0xce59, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe73c, 0x52aa, 0x0000, 0x0000, 0x0000, 0x0000, 0x0841, 0x8430, 0xffdf, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0x18e3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x4208, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x6b6d, 0x0000, 0x0000, 0x39e7,
  0xc618, 0xe71c, 0xb5b6, 0x3186, 0x0000, 0x0000, 0x8430, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0x0861, 0x0000, 0x18e3, 0xf7be, 0xffff, 0xffff, 0xffff, 0xf79e, 0x18e3, 0x0000, 0x18c3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x7bcf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x738e, 0x0000, 0x0000, 0xe73c,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71c, 0xad75, 0xad75, 0xe71c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0x632c, 0x0000, 0x0000, 0xe73c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffdf, 0x10a2, 0x0000, 0x2965, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9492, 0x0000, 0x0000, 0x738e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd69a, 0x0841, 0x0000, 0x0861, 0xe71c, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0x2124, 0x0000,
  0x0000, 0x9cd3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0x4a69, 0x0000, 0x0000, 0x630c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0x73ae, 0x0000, 0x0000, 0x31a6, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xa514, 0x0000, 0x0000, 0x18e3, 0xe73c, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce59, 0x0020, 0x0000, 0x0841, 0xce79, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71c, 0x18c3, 0x0000,
  0x0000, 0xb596, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xf7be, 0x3186, 0x0000, 0x0000, 0x2104, 0x6b6d, 0x6b6d, 0x6b6d, 0x6b6d, 0x6b6d, 0x6b6d, 0xdedb, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0x52aa, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xbdf7,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8410, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0xbdf7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff
};
// '20px_3', 20x25px
const uint16_t bitmap_20px_numbers_20px_3 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xdefb, 0xb5b6, 0xa514, 0xc638, 0xf79e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe73c, 0x52aa, 0x0000, 0x0000, 0x0000, 0x0000, 0x0841, 0x8430, 0xffdf, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x39c7, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x630c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cd3, 0x0000, 0x0000, 0x31a6,
  0xad55, 0xd6ba, 0x7bef, 0x10a2, 0x0000, 0x0000, 0xb5b6, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0x4a49, 0x0000, 0x0000, 0xce79, 0xffff, 0xffff, 0xffff, 0x9cf3, 0x0000, 0x0000, 0x6b6d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0x8410, 0x7bcf, 0x9492, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0x0841, 0x0000, 0x4a49, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e,
  0x0000, 0x0000, 0x6b6d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffdf, 0x630c, 0x0000, 0x0000, 0xad55, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xce59, 0x31a6, 0x1082, 0x0000, 0x0000, 0x5acb, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xb5b6, 0x0000, 0x0000, 0x0000, 0x0841, 0xef5d, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd69a, 0x52aa, 0x2124, 0x0000,
  0x0000, 0x39e7, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0x7bef, 0x0000, 0x0000, 0x73ae, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x2104, 0x0000, 0x39c7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x528a, 0x0000, 0x0020, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xb596, 0x18c3, 0x18c3, 0xa534, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0x31a6, 0x0000, 0x10a2, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x0000, 0x2124, 0xffff,
  0xffff, 0xffff, 0xffff, 0xc618, 0x0000, 0x0000, 0x4228, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0x39e7, 0x0000, 0x0000, 0x31a6, 0x8c51, 0xbdf7, 0x8c51, 0x0861, 0x0000, 0x0000, 0xbdd7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xe71c, 0x2124, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x738e, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x528a, 0x1082, 0x0000, 0x0000, 0x0000, 0x2104,
  0xb596, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xdedb, 0xc618, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff
};
// '20px_4', 20x25px
const uint16_t bitmap_20px_numbers_20px_4 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xad75, 0xad55, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x10a2, 0xad55, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0x4a69, 0x0000, 0xad55, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0x9cf3, 0x0000, 0x0000, 0xad55, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71c, 0x0861, 0x0000, 0x0000, 0xad55, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x4208, 0x0000, 0x0000, 0x0000, 0xad55, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c71, 0x0000, 0x0000,
  0x0000, 0x0000, 0xad55, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xd6ba, 0x0841, 0x0000, 0x0000, 0x0000, 0x0000, 0xad55, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffdf, 0x3186, 0x0000, 0x0020, 0x632c, 0x0000, 0x0000, 0xad55, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x7bef, 0x0000, 0x0000, 0x8410, 0x9cd3, 0x0000, 0x0000, 0xad55, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce59, 0x0020, 0x0000, 0x31a6, 0xffdf, 0x9cd3,
  0x0000, 0x0000, 0xad55, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0x2124, 0x0000,
  0x0841, 0xd6ba, 0xffff, 0x9cd3, 0x0000, 0x0000, 0xad55, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0x6b6d, 0x0000, 0x0000, 0x9492, 0xffff, 0xffff, 0x9cd3, 0x0000, 0x0000, 0xad55, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xbdf7, 0x0000, 0x0000, 0x39c7, 0xf79e, 0xf79e, 0xf79e, 0x9492, 0x0000, 0x0000, 0xa514, 0xf79e,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0x18e3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0xbdf7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x5aeb, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xbdf7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0x9492,
  0x9492, 0x9492, 0x9492, 0x9492, 0x9492, 0x9492, 0x9492, 0x52aa, 0x0000, 0x0000, 0x630c, 0x9492, 0xe71c, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cd3, 0x0000, 0x0000, 0xad55, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cd3,
  0x0000, 0x0000, 0xad55, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff
};
// '20px_5', 20x25px
const uint16_t bitmap_20px_numbers_20px_5 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xf7be, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x73ae, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe71c,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x2945, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0xe71c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xdefb, 0x0000,
  0x0000, 0x4a49, 0x8c51, 0x8c51, 0x8c51, 0x8c51, 0x8c51, 0xf79e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0x9492, 0x0000, 0x0000, 0xc618, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x4228, 0x0000, 0x1082, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0x0020, 0x0000, 0x18e3, 0x73ae, 0x9cf3, 0xd69a,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xad55, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x5aeb, 0xf79e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0x5aeb, 0x0000, 0x0000, 0x10a2, 0x1082, 0x0000, 0x0000, 0x0000, 0x2945, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x10a2, 0x4208, 0xdedb, 0xffff, 0xffff, 0xce59, 0x2945, 0x0000, 0x0000, 0x7bef, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0x9cf3, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d,
  0x1082, 0x0000, 0x0020, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0x7bef, 0x0000, 0x0000, 0xd69a, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xad75, 0x0000, 0x0000, 0xad55, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cd3, 0x0000, 0x0000, 0xc618,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cf3, 0xbdf7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0x52aa, 0x0000, 0x0000, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x73ae, 0x0000, 0x18e3, 0xe71c, 0xffff,
  0xffff, 0xffff, 0xffff, 0xad55, 0x0000, 0x0000, 0x39c7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x632c,
  0x0000, 0x0000, 0x10a2, 0x6b6d, 0xb5b6, 0xb596, 0x632c, 0x0000, 0x0000, 0x0841, 0xdedb, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffdf, 0x4a49, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0861, 0xa534, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c51, 0x18e3, 0x0000, 0x0000, 0x0000, 0x0841, 0x528a,
  0xe71c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xdedb,
  0xbdf7, 0xdedb, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff
};
// '20px_6', 20x25px
const uint16_t bitmap_20px_numbers_20px_6 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xc618, 0xb596, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x18c3, 0x0000, 0x7bef, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x4a49, 0x0000,
  0x0000, 0x9cd3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0x8c51, 0x0000, 0x0000, 0x5acb, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xce59, 0x0020, 0x0000, 0x2104, 0xf79e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0x2104, 0x0000, 0x0020, 0xce59, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x52aa, 0x0000, 0x0000, 0x8c71, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cd3, 0x0000,
  0x0000, 0x18c3, 0x94b2, 0xc618, 0xf79e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xd69a, 0x0841, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0841, 0x9cd3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x39c7, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x73ae, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xad55, 0x0000, 0x0000, 0x18c3, 0xad55, 0xef7d, 0xe73c, 0x8c71,
  0x0841, 0x0000, 0x0000, 0xc638, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x31a6, 0x0000, 0x0841, 0xd6ba,
  0xffff, 0xffff, 0xffff, 0xffff, 0xad55, 0x0000, 0x0000, 0x52aa, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf,
  0x0020, 0x0000, 0x52aa, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x2124, 0x0000, 0x2124, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xe71c, 0x0000, 0x0000, 0x73ae, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x4228, 0x0000, 0x1082,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0x4a49, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0x18c3, 0x0000, 0x4208, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x4a49, 0x0000, 0x0000, 0xb5b6,
  0xffff, 0xffff, 0xffff, 0xffff, 0x8430, 0x0000, 0x0000, 0x7bef, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xdedb, 0x0841, 0x0000, 0x0020, 0x73ae, 0xbdd7, 0xb596, 0x5acb, 0x0000, 0x0000, 0x2104, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xa534, 0x0841, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x10a2, 0xce59, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xdedb, 0x4228, 0x0000, 0x0000, 0x0000, 0x0020,
  0x52aa, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xf7be, 0xce59, 0xce79, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff
};
// '20px_7', 20x25px
const uint16_t bitmap_20px_numbers_20px_7 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf,
  0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xe73c, 0xffdf, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xbdf7, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x2945, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xbdf7, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0xbdf7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71c, 0x8c51, 0x8c51, 0x8c51, 0x8c51,
  0x8c51, 0x8c51, 0x8c51, 0x8c51, 0x4228, 0x0000, 0x0000, 0x5acb, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0x18c3, 0x0000, 0x0861, 0xe73c, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x6b6d, 0x0000, 0x0000, 0x9492, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000,
  0x0000, 0x3186, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0x31a6, 0x0000, 0x0000, 0xce59, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cd3, 0x0000, 0x0000, 0x632c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x1082, 0x0000, 0x10a2, 0xef7d, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x630c, 0x0000, 0x0000, 0x9cf3,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xc618,
  0x0000, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffdf, 0x2965, 0x0000, 0x0020, 0xd69a, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c51, 0x0000, 0x0000, 0x738e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71c, 0x0861, 0x0000, 0x18e3, 0xf79e, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x528a, 0x0000, 0x0000,
  0xad55, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xb5b6, 0x0000, 0x0000, 0x4228, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xf7be, 0x2104, 0x0000, 0x0841, 0xdedb, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe73c, 0x39c7, 0x0000, 0x7bef, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cf3, 0xf7be, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff
};
// '20px_8', 20x25px
const uint16_t bitmap_20px_numbers_20px_8 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xdefb, 0xad75, 0xb596, 0xdefb, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xdedb, 0x39e7, 0x0000, 0x0000, 0x0000, 0x0000, 0x4228, 0xe71c, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xdedb, 0x0841, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x10a2, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x39e7, 0x0000, 0x0000,
  0x528a, 0xbdf7, 0xb596, 0x4228, 0x0000, 0x0000, 0x528a, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xef5d, 0x0000, 0x0000, 0x39c7, 0xffff, 0xffff, 0xffff, 0xffff, 0x2104, 0x0000, 0x0020, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xbdf7, 0x0000, 0x0000, 0x9cf3, 0xffff, 0xffff, 0xffff, 0xffff, 0x8430, 0x0000, 0x0000, 0xd6ba,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xdedb, 0x0000, 0x0000, 0x738e, 0xffff, 0xffff, 0xffff, 0xffff,
  0x5aeb, 0x0000, 0x0000, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x10a2, 0x0000, 0x1082,
  0xdefb, 0xffff, 0xffff, 0xd69a, 0x0020, 0x0000, 0x2965, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xad75, 0x0000, 0x0000, 0x0000, 0x4a69, 0x4208, 0x0000, 0x0000, 0x0841, 0xc638, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x6b6d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x8430, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xa534, 0x0020, 0x0000, 0x0000, 0x2104, 0x18c3, 0x0000,
  0x0000, 0x0861, 0xc638, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x2104,
  0xce79, 0xffff, 0xffff, 0xb596, 0x0861, 0x0000, 0x0861, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0x8c51, 0x0000, 0x0000, 0xc618, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c71, 0x0000, 0x0000, 0xbdf7, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0x4a69, 0x0000, 0x0841, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 0x0000, 0x0000, 0x7bef,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x5acb, 0x0000, 0x0000, 0xf79e, 0xffff, 0xffff, 0xffff, 0xffff,
  0xc638, 0x0000, 0x0000, 0x8c51, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x8c51, 0x0000, 0x0000, 0x7bef,
  0xffff, 0xffff, 0xffff, 0xffff, 0x528a, 0x0000, 0x0000, 0xb5b6, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xe73c, 0x10a2, 0x0000, 0x0000, 0x632c, 0xbdd7, 0xb596, 0x4a49, 0x0000, 0x0000, 0x2945, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xb596, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0841, 0xce59, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 0x39e7, 0x0000, 0x0000, 0x0000, 0x0000,
  0x4228, 0xdefb, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xf7be, 0xce59, 0xce59, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff
};
// '20px_9', 20x25px
const uint16_t bitmap_20px_numbers_20px_9 [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xe71c, 0xb596, 0xb5b6, 0xe73c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce79, 0x2965, 0x0000, 0x0000, 0x0000, 0x0000, 0x31a6, 0xd6ba, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xa534, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0020, 0xad55, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xdefb, 0x0861, 0x0000, 0x0841,
  0x8430, 0xd6ba, 0xd6ba, 0x8430, 0x0841, 0x0000, 0x0861, 0xdefb, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0x5acb, 0x0000, 0x0000, 0xb5b6, 0xffff, 0xffff, 0xffff, 0xffff, 0xb596, 0x0000, 0x0000, 0x5acb, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0x2104, 0x0000, 0x39c7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x39c7, 0x0000, 0x18e3,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0x0000, 0x0000, 0x5aeb, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0x5aeb, 0x0000, 0x0000, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x1082, 0x0000, 0x31a6, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x39c7, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0x4208, 0x0000, 0x0000, 0xb596, 0xffff, 0xffff, 0xffff, 0xffff, 0xb596, 0x0000, 0x0000, 0x5acb, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xc618, 0x0000, 0x0000, 0x0020, 0x8430, 0xd69a, 0xd69a, 0x8430, 0x0020, 0x0000, 0x0000, 0xd69a,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x73ae, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x632c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xa514, 0x1082,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 0xa534, 0x0861, 0x0000, 0x0000, 0xc618, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x630c, 0x0000, 0x0000, 0x8410, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xa534, 0x0000, 0x0000, 0x4208,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xdedb,
  0x0861, 0x0000, 0x10a2, 0xe73c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffdf, 0x3186, 0x0000, 0x0000, 0xb5b6, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x738e, 0x0000, 0x0000, 0x73ae, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x7bef, 0x0000, 0x31a6, 0xffdf, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xbdd7,
  0xdefb, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff
};

const uint16_t* bitmap_20px_numbers[10] = {
  bitmap_20px_numbers_20px_0,
  bitmap_20px_numbers_20px_1,
  bitmap_20px_numbers_20px_2,
  bitmap_20px_numbers_20px_3,
  bitmap_20px_numbers_20px_4,
  bitmap_20px_numbers_20px_5,
  bitmap_20px_numbers_20px_6,
  bitmap_20px_numbers_20px_7,
  bitmap_20px_numbers_20px_8,
  bitmap_20px_numbers_20px_9
};

// 'icon_play', 20x20px
const uint16_t bitmap_icons_icon_play [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0x39e7, 0x6b4d, 0xf79e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71c, 0x0000, 0x0000, 0x18c3, 0xb596,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71c,
  0x0000, 0x10a2, 0x0020, 0x0000, 0x52aa, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xe71c, 0x0000, 0x52aa, 0xd69a, 0x31a6, 0x0000, 0x1082, 0x9cf3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71c, 0x0000, 0x52aa, 0xffff, 0xffff, 0x8c71, 0x0841, 0x0000, 0x4228,
  0xdefb, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71c, 0x0000, 0x52aa, 0xffff, 0xffff,
  0xffff, 0xdefb, 0x4228, 0x0000, 0x0841, 0x8c71, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71c,
  0x0000, 0x52aa, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cf3, 0x1082, 0x0000, 0x31a6, 0xd69a, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xe71c, 0x0000, 0x52aa, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x52aa, 0x0000, 0x0020,
  0x7bcf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71c, 0x0000, 0x52aa, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xb596, 0x18c3, 0x0000, 0x31a6, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71c, 0x0000, 0x52aa, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xb596, 0x18c3, 0x0000, 0x31a6, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71c,
  0x0000, 0x52aa, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x52aa, 0x0000, 0x0020, 0x7bcf, 0xffdf, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xe71c, 0x0000, 0x52aa, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9cf3, 0x1082, 0x0000, 0x31a6, 0xd69a,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71c, 0x0000, 0x52aa, 0xffff, 0xffff, 0xffff, 0xdefb, 0x4228, 0x0000,
  0x0841, 0x8c71, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71c, 0x0000, 0x52aa, 0xffff, 0xffff,
  0x8c71, 0x0841, 0x0000, 0x4228, 0xdefb, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71c,
  0x0000, 0x52aa, 0xd69a, 0x31a6, 0x0000, 0x1082, 0x9cf3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xe71c, 0x0000, 0x10a2, 0x0020, 0x0000, 0x52aa, 0xef5d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71c, 0x0000, 0x0000, 0x18c3, 0xb596, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0x39e7, 0x6b4d, 0xf79e, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// 'icon_pause', 20x20px
const uint16_t bitmap_icons_icon_pause [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9492, 0x5aeb, 0x5aeb, 0x5aeb,
  0x9492, 0xffff, 0xffff, 0x9492, 0x5aeb, 0x5aeb, 0x5aeb, 0x9492, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0x18e3, 0x39c7, 0x5aeb, 0x39c7, 0x18e3, 0xffff, 0xffff, 0x18e3, 0x39c7, 0x5aeb, 0x39c7, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0x18e3, 0x9cf3, 0xffff, 0x9cf3, 0x18e3, 0xffff, 0xffff, 0x18e3, 0x9cf3, 0xffff, 0x9cf3, 0x18e3,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x18e3, 0x9cf3, 0xffff, 0x9cf3, 0x18e3, 0xffff, 0xffff, 0x18e3,
  0x9cf3, 0xffff, 0x9cf3, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x18e3, 0x9cf3, 0xffff, 0x9cf3,
  0x18e3, 0xffff, 0xffff, 0x18e3, 0x9cf3, 0xffff, 0x9cf3, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0x18e3, 0x9cf3, 0xffff, 0x9cf3, 0x18e3, 0xffff, 0xffff, 0x18e3, 0x9cf3, 0xffff, 0x9cf3, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0x18e3, 0x9cf3, 0xffff, 0x9cf3, 0x18e3, 0xffff, 0xffff, 0x18e3, 0x9cf3, 0xffff, 0x9cf3, 0x18e3,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x18e3, 0x9cf3, 0xffff, 0x9cf3, 0x18e3, 0xffff, 0xffff, 0x18e3,
  0x9cf3, 0xffff, 0x9cf3, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x18e3, 0x9cf3, 0xffff, 0x9cf3,
  0x18e3, 0xffff, 0xffff, 0x18e3, 0x9cf3, 0xffff, 0x9cf3, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0x18e3, 0x9cf3, 0xffff, 0x9cf3, 0x18e3, 0xffff, 0xffff, 0x18e3, 0x9cf3, 0xffff, 0x9cf3, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0x18e3, 0x9cf3, 0xffff, 0x9cf3, 0x18e3, 0xffff, 0xffff, 0x18e3, 0x9cf3, 0xffff, 0x9cf3, 0x18e3,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x18e3, 0x9cf3, 0xffff, 0x9cf3, 0x18e3, 0xffff, 0xffff, 0x18e3,
  0x9cf3, 0xffff, 0x9cf3, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x18e3, 0x9cf3, 0xffff, 0x9cf3,
  0x18e3, 0xffff, 0xffff, 0x18e3, 0x9cf3, 0xffff, 0x9cf3, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0x18e3, 0x9cf3, 0xffff, 0x9cf3, 0x18e3, 0xffff, 0xffff, 0x18e3, 0x9cf3, 0xffff, 0x9cf3, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0x18e3, 0x39c7, 0x5aeb, 0x39c7, 0x18e3, 0xffff, 0xffff, 0x18e3, 0x39c7, 0x5aeb, 0x39c7, 0x18e3,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9492, 0x5aeb, 0x5aeb, 0x5aeb, 0x9492, 0xffff, 0xffff, 0x9492,
  0x5aeb, 0x5aeb, 0x5aeb, 0x9492, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// 'icon_log', 20x20px
const uint16_t bitmap_icons_icon_log [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffdf, 0xf79e, 0xf79e, 0xf79e, 0xf79e, 0xf79e, 0xf79e, 0xf79e, 0xf79e, 0xf79e, 0xf79e, 0xf79e, 0xffff, 0xffff,
  0xffff, 0xbdd7, 0x0861, 0xd6ba, 0xffff, 0xffdf, 0x18c3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x528a, 0xffff, 0xffff, 0xe71c, 0x6b6d, 0xf79e, 0xffff, 0xffff, 0x73ae, 0x528a, 0x528a, 0x528a, 0x528a, 0x528a,
  0x528a, 0x528a, 0x528a, 0x528a, 0x528a, 0x528a, 0xa514, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce79, 0x39e7, 0xe73c, 0xffff, 0xffff, 0x4228, 0x2104, 0x2104, 0x2104, 0x2104, 0x2104,
  0x2104, 0x2104, 0x2104, 0x2104, 0x2104, 0x2104, 0x7bcf, 0xffff, 0xffff, 0xce79, 0x39e7, 0xe73c, 0xffff, 0xffff, 0x4228, 0x2104,
  0x2104, 0x2104, 0x2104, 0x2104, 0x2104, 0x2104, 0x2104, 0x2104, 0x2104, 0x2104, 0x7bcf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe71c, 0x6b6d, 0xf79e, 0xffff, 0xffff, 0x73ae, 0x528a,
  0x528a, 0x528a, 0x528a, 0x528a, 0x528a, 0x528a, 0x528a, 0x528a, 0x528a, 0x528a, 0xa514, 0xffff, 0xffff, 0xbdd7, 0x0861, 0xd6ba,
  0xffff, 0xffdf, 0x18c3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x528a, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xf79e, 0xf79e, 0xf79e, 0xf79e, 0xf79e, 0xf79e, 0xf79e, 0xf79e, 0xf79e,
  0xf79e, 0xf79e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};
// 'icon_reset', 20x20px
const uint16_t bitmap_icons_icon_reset [] PROGMEM = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfd96, 0xfbef, 0xfb8e, 0xfb8e, 0xfb8e, 0xfb8e, 0xfb8e, 0xfb8e, 0xfb8e, 0xfb8e,
  0xfb8e, 0xfb8e, 0xfb8e, 0xfb8e, 0xfbef, 0xfd96, 0xffff, 0xffff, 0xffff, 0xfd96, 0xfb0c, 0xfb4d, 0xfb8e, 0xfb8e, 0xfb8e, 0xfb8e,
  0xfb8e, 0xfb8e, 0xfb8e, 0xfb8e, 0xfb8e, 0xfb8e, 0xfb8e, 0xfb8e, 0xfb4d, 0xfb0c, 0xfd96, 0xffff, 0xffff, 0xfbef, 0xfb4d, 0xffbe,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffbe, 0xfb4d, 0xfbef, 0xffff,
  0xffff, 0xfb8e, 0xfb8e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xfb8e, 0xfb8e, 0xffff, 0xffff, 0xfb8e, 0xfb8e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfb8e, 0xfb8e, 0xffff, 0xffff, 0xfb8e, 0xfb8e, 0xffff, 0xffff, 0xffff, 0xff7d, 0xfdd7,
  0xffdf, 0xffff, 0xffff, 0xffdf, 0xfdd7, 0xff7d, 0xffff, 0xffff, 0xffff, 0xfb8e, 0xfb8e, 0xffff, 0xffff, 0xfb8e, 0xfb8e, 0xffff,
  0xffff, 0xffff, 0xfdd7, 0xfb0c, 0xfc71, 0xffdf, 0xffdf, 0xfc71, 0xfb0c, 0xfdd7, 0xffff, 0xffff, 0xffff, 0xfb8e, 0xfb8e, 0xffff,
  0xffff, 0xfb8e, 0xfb8e, 0xffff, 0xffff, 0xffff, 0xffdf, 0xfc71, 0xfb0c, 0xfc71, 0xfc51, 0xfb0c, 0xfc71, 0xffdf, 0xffff, 0xffff,
  0xffff, 0xfb8e, 0xfb8e, 0xffff, 0xffff, 0xfb8e, 0xfb8e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xfc71, 0xfb0c, 0xfb0c, 0xfc51,
  0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xfb8e, 0xfb8e, 0xffff, 0xffff, 0xfb8e, 0xfb8e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf,
  0xfc51, 0xfb0c, 0xfb0c, 0xfc71, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xfb8e, 0xfb8e, 0xffff, 0xffff, 0xfb8e, 0xfb8e, 0xffff,
  0xffff, 0xffff, 0xffdf, 0xfc71, 0xfb0c, 0xfc51, 0xfc71, 0xfb0c, 0xfc71, 0xffdf, 0xffff, 0xffff, 0xffff, 0xfb8e, 0xfb8e, 0xffff,
  0xffff, 0xfb8e, 0xfb8e, 0xffff, 0xffff, 0xffff, 0xfdd7, 0xfb0c, 0xfc71, 0xffdf, 0xffdf, 0xfc71, 0xfb0c, 0xfdd7, 0xffff, 0xffff,
  0xffff, 0xfb8e, 0xfb8e, 0xffff, 0xffff, 0xfb8e, 0xfb8e, 0xffff, 0xffff, 0xffff, 0xff7d, 0xfdd7, 0xffdf, 0xffff, 0xffff, 0xffdf,
  0xfdd7, 0xff7d, 0xffff, 0xffff, 0xffff, 0xfb8e, 0xfb8e, 0xffff, 0xffff, 0xfb8e, 0xfb8e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfb8e, 0xfb8e, 0xffff, 0xffff, 0xfb8e, 0xfb8e, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfb8e, 0xfb8e, 0xffff,
  0xffff, 0xfbef, 0xfb4d, 0xffbe, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffbe, 0xfb4d, 0xfbef, 0xffff, 0xffff, 0xfd96, 0xfb0c, 0xfb4d, 0xfb8e, 0xfb8e, 0xfb8e, 0xfb8e, 0xfb8e, 0xfb8e, 0xfb8e, 0xfb8e,
  0xfb8e, 0xfb8e, 0xfb8e, 0xfb8e, 0xfb4d, 0xfb0c, 0xfd96, 0xffff, 0xffff, 0xffff, 0xfd96, 0xfbef, 0xfb8e, 0xfb8e, 0xfb8e, 0xfb8e,
  0xfb8e, 0xfb8e, 0xfb8e, 0xfb8e, 0xfb8e, 0xfb8e, 0xfb8e, 0xfb8e, 0xfbef, 0xfd96, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};

void setup() {
  M5.begin();
  dacWrite(25, 0);
  M5.Power.begin();
  Wire.begin();
  pinMode(KEYBOARD_INT, INPUT_PULLUP);
  setupTimer();
}

void loop() {
  M5.update();
  timerMainLoop();
}

void setupTimer() {
  M5.Lcd.fillScreen(WHITE);
  M5.Lcd.setTextColor(WHITE);
  M5.Lcd.setBrightness(50);
  M5.Lcd.drawBitmap(60, 210, 20, 20, bitmap_icons_icon_pause);
  M5.Lcd.drawBitmap(150, 210, 20, 20, bitmap_icons_icon_log);
  M5.Lcd.drawBitmap(245, 210, 20, 20, bitmap_icons_icon_reset);
  M5.Lcd.setTextColor(BLACK);
  M5.Lcd.setTextSize(6);
  M5.Lcd.drawBitmap(259, 7, 16, 9, bitmap_battery);
  M5.Lcd.drawBitmap(112, 5, 16, 16, bitmap_timer);
  M5.Lcd.fillRect(157, 72, 2, 30, LIGHTGREY);
  isCharging = M5.Power.isCharging();
  beforeTime = millis();
}

bool isLaunchedRequest = false;

void timerMainLoop() {

  int minutes = remain / 60;
  int seconds = remain % 60;

  if (!(minutes == beforeMinutes && seconds == beforeSeconds )) {
    M5.Lcd.setTextSize(2);
  }

  if (minutes != beforeMinutes) {
    beforeMinutes = minutes;
    M5.Lcd.fillRect( 132, 5, 22, 20, WHITE);
    int tens_place = (minutes / 10) % 10;
    int ones_place = minutes % 10;
    M5.Lcd.drawBitmap(132, 5, 12, 16, bitmap_numbers[tens_place]);
    M5.Lcd.drawBitmap(144, 5, 12, 16, bitmap_numbers[ones_place]);
  }

  if (seconds != beforeSeconds) {
    beforeSeconds = seconds;
    M5.Lcd.fillRect(164, 5, 24, 20, WHITE);
    int tens_place = (seconds / 10) % 10;
    int ones_place = seconds % 10;
    M5.Lcd.drawBitmap(164, 5, 12, 16, bitmap_numbers[tens_place]);
    M5.Lcd.drawBitmap(176, 5, 12, 16, bitmap_numbers[ones_place]);
  }

  if (count == 0) {
    M5.Lcd.setTextSize(2);
    M5.Lcd.drawBitmap(160 - 6, 5, 12, 16, bitmap_colon);
  } else if (count == 25) {
    M5.Lcd.setTextSize(2);
    M5.Lcd.fillRect(160 - 6, 5, 12, 16, WHITE);
  }

  int currentBattery = M5.Power.getBatteryLevel();
  if (battery != currentBattery) {
    battery = currentBattery;

    M5.Lcd.fillRect(276, 5, 44, 20, WHITE);

    // Draw Battery Icon
    if ((int)battery == 100) {
      M5.Lcd.drawBitmap(279, 5, 10, 14, bitmap_10px_numbers[1]);
      M5.Lcd.drawBitmap(288, 5, 10, 14, bitmap_10px_numbers[0]);
      M5.Lcd.drawBitmap(297, 5, 10, 14, bitmap_10px_numbers[0]);
    } else {
      int tens_place = (seconds / 10) % 10;
      int ones_place = seconds % 10;
      if (tens_place == 0 && ones_place == 0) {
      M5.Lcd.drawBitmap(288, 5, 10, 14, bitmap_10px_numbers[9]);
      M5.Lcd.drawBitmap(297, 5, 10, 14, bitmap_10px_numbers[9]);
      } else {
        M5.Lcd.drawBitmap(288, 5, 10, 14, bitmap_10px_numbers[tens_place]);
        M5.Lcd.drawBitmap(297, 5, 10, 14, bitmap_10px_numbers[ones_place]);
      }
    }

    M5.Lcd.fillRect(259 + 1, 7 + 1, 11, 7, GREEN);

    M5.Lcd.drawBitmap(308, 5, 10, 14, bitmap_10px_percent);
  }

  bool currentIsCharging = M5.Power.isCharging();
  if (isCharging != currentIsCharging) {
    isCharging = currentIsCharging;
    if (isCharging) {
      M5.Lcd.fillRect(252, 10, 5, 6, GREEN);
    } else {
      M5.Lcd.fillRect(252, 10, 5, 6, DARKGREY);
    }
  }

  if (isRunning) {
    if (remain == 0) {
      dacWrite(25, 0x50);
      M5.Speaker.begin();
      M5.Speaker.setVolume(2);
      for (int j = 0; j < 3; j++) {
        for (int i = 0; i < 4; i++) {
          M5.Speaker.tone(1000, 60);
          delay(60);
          M5.Speaker.mute();
          delay(60);
        }
        delay(700);
      }
      remain = MAX;
      dacWrite(25, 0);
      isRunning = false;
    } else {
      count ++;
      if (count == 50) {
        remain--;
        count = 0;
        M5.Lcd.wakeup();
      }
    }
  }

  // Press [START/STOP]
  if (M5.BtnA.wasReleased() || M5.BtnA.pressedFor(1000, 200)) {
    M5.Lcd.fillRect(60, 210, 20, 20, WHITE);
    if (isRunning) {
      M5.Lcd.drawBitmap(60, 210, 20, 20, bitmap_icons_icon_play);
    } else {
      M5.Lcd.drawBitmap(60, 210, 20, 20, bitmap_icons_icon_pause);
    }
    isRunning = !isRunning;
  }

  // Press [LOG]
  if (M5.BtnB.wasReleased() || M5.BtnB.pressedFor(1000, 200)) {
    //    isRunning = false;
  }

  // Press [RESET]
  if (M5.BtnC.wasReleased() || M5.BtnC.pressedFor(1000, 200)) {
    resetState();
  }

  if (digitalRead(KEYBOARD_INT) == LOW)
  {
    Wire.requestFrom(KEYBOARD_I2C_ADDR, 1);
    while (Wire.available())
    {
      uint8_t key_val = Wire.read();
      if (key_val != 0)
      {
        bool executed = false;
        if (isDigit(key_val))
        {
          for (int i = 0; i < INPUT_LENGTH; i++) {
            if (inputData[i] == -1) {
              inputData[i] = key_val;
              executed = true;
              break;
            }
          }
        }

        switch (key_val) {
          case '=': {
              String v = "";
              for (int i = 0; i < INPUT_LENGTH; i++) {
                if (inputData[i] != -1) {
                  v += (char)inputData[i];
                }
              }
              stringInputData = v;
              if (focusSide == SIDE_ME) {
                switch (inputRatio) {
                  case -1: {
                      myLifePoint = max(0, myLifePoint - ((int)stringInputData.toInt()));
                      break;
                    }
                  case 0: {
                      myLifePoint = stringInputData.toInt();
                      break;
                    }
                  case 1: {
                      myLifePoint += stringInputData.toInt();
                      break;
                    }
                }
              } else {
                switch (inputRatio) {
                  case -1: {
                      opponentLifePoint = max(0, opponentLifePoint - ((int)stringInputData.toInt()));
                      break;
                    }
                  case 0: {
                      opponentLifePoint = stringInputData.toInt();
                      break;
                    }
                  case 1: {
                      opponentLifePoint += stringInputData.toInt();
                      break;
                    }
                }
              }
              for (int i = 0; i < INPUT_LENGTH; i++) {
                inputData[i] = -1;
              }
              inputRatio = -1;
              executed = true;
              break;
            }
          case 96: {
              // +/- button
              for (int j = 0; j < 2; j++) {
                for (int i = 0; i < INPUT_LENGTH; i++) {
                  if (inputData[i] == -1) {
                    inputData[i] = 48;
                    break;
                  }
                }
              }
              executed = true;
              break;
            }
          case 'A': {
              for (int i = 0; i < INPUT_LENGTH; i++) {
                inputData[i] = -1;
              }
              executed = true;
              break;
            }
          case 'M': {
              focusSide = (focusSide == 1) ? 2 : 1;
              for (int i = 0; i < INPUT_LENGTH; i++) {
                inputData[i] = -1;
              }
              executed = true;
              break;
            }
          case '-': {
              inputRatio = -1;
              break;
            }
          case '.': {
              inputRatio = 0;
              break;
            }
          case '+': {
              inputRatio = 1;
              break;
            }
        }

        if (executed) {
          String v = "";
          for (int i = 0; i < INPUT_LENGTH; i++) {
            if (inputData[i] != -1) {
              v += (char)inputData[i];
            }
          }
          stringInputData = v;
          break;
        }

        break;
      }
      delay(1);
    }
  }

  if (
    (beforeStringInputData != stringInputData) ||
    (beforeInputRatio != inputRatio)
  ) {
    beforeInputRatio = inputRatio;
    beforeStringInputData = stringInputData;
    M5.Lcd.fillRect(0, 155, 320, 45, LIGHTGREY);
    switch (inputRatio) {
      case -1: {
          M5.Lcd.drawString("-", 10, 169);
          break;
        }
      case 0: {
          M5.Lcd.drawString("=", 10, 169);
          break;
        }
      case 1: {
          M5.Lcd.drawString("+", 10, 169);
          break;
        }
    }
    M5.Lcd.drawString(stringInputData, 25, 169);
  }

  if (beforeMyLifePoint != myLifePoint) {
    beforeMyLifePoint = myLifePoint;
    String lifeString = String(myLifePoint);
    int maxLength = lifeString.length();
    M5.Lcd.fillRect(45, 75, 112, 23, WHITE);
    for (int i = 0; i < maxLength; i++) {
      int num = lifeString.charAt(i) - '0';
      M5.Lcd.drawBitmap(45 + (i * 18) - (max(maxLength - 4, 0) * 18), 75, 20, 25, bitmap_20px_numbers[num]);
    }
  }

  if (beforeOpponentLifePoint != opponentLifePoint) {
    beforeOpponentLifePoint = opponentLifePoint;
    String lifeString = String(opponentLifePoint);
    int maxLength = lifeString.length();
    M5.Lcd.fillRect(162, 75, 160 - 12, 23, WHITE);
    for (int i = 0; i < maxLength; i++) {
      int num = lifeString.charAt(i) - '0';
      M5.Lcd.drawBitmap(45 + (i * 18) + 160 - (max(maxLength - 4, 0) * 18), 75, 20, 25, bitmap_20px_numbers[num]);
    }
  }

  if (focusSide != beforeFocusSide) {
    beforeFocusSide = focusSide;
    if (focusSide == SIDE_ME) {
      M5.Lcd.fillRect(310, 80 - 3, 10, 20, WHITE);
      M5.Lcd.fillRect(  0, 80 - 3, 6, 20, RED);
    }
    if (focusSide == SIDE_OPPONENT) {
      M5.Lcd.fillRect(  0, 80 - 3, 6, 20, WHITE);
      M5.Lcd.fillRect(320 - 6, 80 - 3, 6, 20, RED);
    }
  }

  int waitTime = 20 - (millis() - beforeTime);
  if (waitTime >= 0) {
    delay(waitTime);
  }
  beforeTime = millis();
}

void resetState() {
  isRunning = false;
  remain = MAX;
  beforeMinutes = -1;
  beforeSeconds = -1;
  count = 0;
  myLifePoint = 8000;
  opponentLifePoint = 8000;
  M5.Lcd.fillRect(60, 210, 20, 20, WHITE);
  M5.Lcd.drawBitmap(60, 210, 20, 20, bitmap_icons_icon_play);
}
